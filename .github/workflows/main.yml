name: Netflix
on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code 
      uses: actions/checkout@v4


    - uses: actions/setup-node@v4
      with:
        node-version: 16
    - run: npm install  
    - run: npm ci
    - name: Build artifact
      run: npm run build
      
    # - name: Publish to Nexus
    #   run: npm publish --registry=http://18.224.137.28:8081/repository/nuget-hosted/ 
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}     
    
        
    # - name: SonarQube Scan
    #   uses: kitabisa/sonarqube-action@master
    #   with:
    #     host: ${{ secrets.SONAR_HOST_URL }}
    #     login: ${{ secrets.SONAR_TOKEN }}
        
    # - name: Depcheck
    #   uses: dependency-check/Dependency-Check_Action@main
    #   id: Depcheck
    #   with:
    #       project: 'netflix-clone-using-react-typescript-mui'
    #       path: '.'
    #       format: 'HTML'
    # - name: Upload Test results
    #   uses: actions/upload-artifact@master
    #   with:
    #        name: Depcheck report
    #        path: ${{github.workspace}}/reports 
    
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
      
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1

    # - name: Run Trivy FS Scan
    #   run: |
    #     docker pull aquasec/trivy
    #     docker run -v $(pwd):/workspace aquasec/trivy fs . > trivyfs.txt
    - name: Remove .kube file
      run: |
        rm -rf $HOME/.kube
       
      continue-on-error: true
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3.0
      with: 
        version: 'v1.29.0' 
      id: install
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Increment and Get Tag
      id: increment_tag
      run: echo "::set-output name=tag::$(expr ${{ github.run_number }} + 1)"

      
    - name: Build, tag, and push docker image to Amazon ECR
      env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: netflix-ecr
          IMAGE_TAG: latest
      run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
             
    # - name: Run Snyk to check for vulnerabilities
    #   uses: snyk/actions/node@master
    #   continue-on-error: true # To make sure that SARIF upload gets called
    #   env:
    #       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    #   with:
    #       args: --sarif-file-output=snyk.sarif
    # - name: Update kube config 
    #   run: aws eks update-kubeconfig --name Netflix-cluster

    - name: Deploy to eks
      run: |
        kubectl apply -f Kubernetes/deployment.yml 
        kubectl apply -f Kubernetes/service.yml 
     
      
           
